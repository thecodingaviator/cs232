$date
  Sun Nov  5 16:07:49 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module std_logic_arith $end
$upscope $end
$scope module std_logic_unsigned $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module altera_common_conversion $end
$upscope $end
$scope module altera_device_families $end
$upscope $end
$scope module stackertest $end
$var reg 1 ! clk $end
$var reg 4 " mbrview[3:0] $end
$var reg 4 # stackview[3:0] $end
$var reg 3 $ stateview[2:0] $end
$var reg 1 % b0 $end
$var reg 1 & b1 $end
$var reg 1 ' b2 $end
$var reg 4 ( data[3:0] $end
$scope module l0 $end
$var reg 1 ) clock $end
$var reg 4 * data[3:0] $end
$var reg 1 + b0 $end
$var reg 1 , b1 $end
$var reg 1 - b2 $end
$var reg 4 . mbrview[3:0] $end
$var reg 4 / stackview[3:0] $end
$var reg 3 0 stateview[2:0] $end
$var reg 4 1 ram_input[3:0] $end
$var reg 4 2 ram_output[3:0] $end
$var reg 4 3 mbr[3:0] $end
$var reg 1 4 ram_we $end
$var reg 4 5 stack_ptr[3:0] $end
$var reg 3 6 state[2:0] $end
$scope module ram_instance $end
$var reg 4 7 address[3:0] $end
$var reg 1 8 clock $end
$var reg 4 9 data[3:0] $end
$var reg 1 : wren $end
$var reg 4 ; q[3:0] $end
$var reg 4 < sub_wire0[3:0] $end
$scope module altsyncram_component $end
$var reg 1 = wren_a $end
$var reg 1 > wren_b $end
$var reg 1 ? rden_a $end
$var reg 1 @ rden_b $end
$var reg 4 A data_a[3:0] $end
$var reg 1 B data_b[0:0] $end
$var reg 4 C address_a[3:0] $end
$var reg 1 D address_b[0:0] $end
$var reg 1 E clock0 $end
$var reg 1 F clock1 $end
$var reg 1 G clocken0 $end
$var reg 1 H clocken1 $end
$var reg 1 I clocken2 $end
$var reg 1 J clocken3 $end
$var reg 1 K aclr0 $end
$var reg 1 L aclr1 $end
$var reg 1 M addressstall_a $end
$var reg 1 N addressstall_b $end
$var reg 1 O byteena_a[0:0] $end
$var reg 1 P byteena_b[0:0] $end
$var reg 4 Q q_a[3:0] $end
$var reg 1 R q_b[0:0] $end
$var reg 3 S eccstatus[2:0] $end
$var reg 4 T i_data_reg_a[3:0] $end
$var reg 1 U i_data_reg_b[0:0] $end
$var reg 4 V i_q_reg_a[3:0] $end
$var reg 4 W i_q_tmp_a[3:0] $end
$var reg 4 X i_q_tmp2_a[3:0] $end
$var reg 4 Y i_q_tmp_wren_a[3:0] $end
$var reg 4 Z i_q_tmp2_wren_a[3:0] $end
$var reg 1 [ i_q_tmp_wren_b[0:0] $end
$var reg 1 \ i_q_reg_b[0:0] $end
$var reg 1 ] i_q_tmp_b[0:0] $end
$var reg 1 ^ i_q_tmp2_b[0:0] $end
$var reg 1 _ i_q_output_latch[0:0] $end
$var reg 1 ` i_q_ecc_reg_b[0:0] $end
$var reg 1 a i_q_ecc_tmp_b[0:0] $end
$var reg 4 b i_current_written_data_a[3:0] $end
$var reg 4 c i_original_data_a[3:0] $end
$var reg 1 d i_original_data_b[0:0] $end
$var reg 4 e i_byteena_mask_reg_a_x[3:0] $end
$var reg 1 f i_byteena_mask_reg_b_x[0:0] $end
$var reg 4 g i_byteena_mask_reg_a[3:0] $end
$var reg 1 h i_byteena_mask_reg_b[0:0] $end
$var reg 4 i i_byteena_mask_reg_a_out[3:0] $end
$var reg 1 j i_byteena_mask_reg_b_out[0:0] $end
$var reg 4 k i_byteena_mask_reg_a_out_b[3:0] $end
$var reg 1 l i_byteena_mask_reg_b_out_a[0:0] $end
$var reg 4 m i_address_reg_a[3:0] $end
$var reg 1 n i_address_reg_b[0:0] $end
$var reg 1 o i_wren_reg_a $end
$var reg 1 p i_wren_reg_b $end
$var reg 1 q i_rden_reg_a $end
$var reg 1 r i_rden_reg_b $end
$var reg 1 s i_read_flag_a $end
$var reg 1 t i_read_flag_b $end
$var reg 1 u i_reread_flag_a $end
$var reg 1 v i_reread_flag_b $end
$var reg 1 w i_reread_flag2_a $end
$var reg 1 x i_reread_flag2_b $end
$var reg 1 y i_write_flag_a $end
$var reg 1 z i_write_flag_b $end
$var reg 1 { i_nmram_write_a $end
$var reg 1 | i_nmram_write_b $end
$var reg 1 } i_indata_aclr_a $end
$var reg 1 !" i_address_aclr_a $end
$var reg 1 "" i_wrcontrol_aclr_a $end
$var reg 1 #" i_indata_aclr_b $end
$var reg 1 $" i_address_aclr_b $end
$var reg 1 %" i_wrcontrol_aclr_b $end
$var reg 1 &" i_outdata_aclr_a $end
$var reg 1 '" i_outdata_aclr_b $end
$var reg 1 (" i_rdcontrol_aclr_b $end
$var reg 1 )" i_byteena_aclr_a $end
$var reg 1 *" i_byteena_aclr_b $end
$var reg 1 +" good_to_go_a $end
$var reg 1 ," good_to_go_b $end
$var reg 1 -" i_core_clocken_a $end
$var reg 1 ." i_core_clocken_b $end
$var reg 1 /" i_core_clocken_b0 $end
$var reg 1 0" i_core_clocken_b1 $end
$var reg 1 1" i_inclocken0 $end
$var reg 1 2" i_input_clocken_b $end
$var reg 1 3" i_outdata_clken_b $end
$var reg 1 4" i_outdata_clken_a $end
$var reg 1 5" i_outlatch_clken_a $end
$var reg 1 6" i_outlatch_clken_b $end
$var reg 1 7" i_core_clocken_a_reg $end
$var reg 1 8" i_core_clocken_b_reg $end
$var reg 1 9" default_val $end
$var reg 4 :" i_data_zero_a[3:0] $end
$var reg 1 ;" i_data_zero_b[0:0] $end
$var reg 4 <" i_data_ones_a[3:0] $end
$var reg 1 =" i_data_ones_b[0:0] $end
$var reg 1 >" same_clock_pulse0 $end
$var reg 1 ?" same_clock_pulse1 $end
$var reg 1 @" i_force_reread_a $end
$var reg 1 A" i_force_reread_a1 $end
$var reg 1 B" i_force_reread_b $end
$var reg 1 C" i_force_reread_b1 $end
$var reg 1 D" i_force_reread_signal_a $end
$var reg 1 E" i_force_reread_signal_b $end
$var reg 1 F" i_good_to_write_a $end
$var reg 1 G" i_good_to_write_b $end
$scope module ifg02 $end
$upscope $end
$scope module ifg03a $end
$upscope $end
$scope module ifg15 $end
$upscope $end
$scope module ifg172a $end
$upscope $end
$scope module ifg50a $end
$upscope $end
$scope module ifg51a $end
$upscope $end
$scope module ifg52b $end
$upscope $end
$scope module ifclr01 $end
$upscope $end
$scope module ifg52 $end
$upscope $end
$scope module ifg57 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
b0000 "
b0000 #
b000 $
1%
0&
0'
b0000 (
0)
b0000 *
1+
0,
0-
b0000 .
b0000 /
b000 0
b0000 1
b0000 2
b0000 3
04
b0000 5
b000 6
b0000 7
08
b0000 9
0:
b0000 ;
b0000 <
0=
0>
1?
1@
b0000 A
b1 B
b0000 C
b1 D
0E
ZF
1G
1H
1I
1J
0K
0L
0M
0N
b1 O
bZ P
b0000 Q
b0 R
b000 S
b0000 T
b0 U
b0000 V
b0000 W
b0000 X
b0000 Y
b0000 Z
b0 [
b0 \
b0 ]
b0 ^
b0 _
b0 `
b0 a
b0000 b
b0000 c
b0 d
b0000 e
b0 f
b1111 g
b1 h
b1111 i
b1 j
b1111 k
b1 l
b0000 m
b0 n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
1-"
1."
1/"
10"
11"
12"
03"
14"
15"
16"
07"
08"
09"
b0000 :"
b0 ;"
b1111 <"
b1 ="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
1F"
1G"
#5000000
1!
1&
1'
1)
1,
1-
18
1E
b0000 i
bXXXX k
1q
1s
1{
1+"
17"
#10000000
0!
0)
08
0E
#15000000
1!
1)
18
1E
0s
#20000000
0!
0)
08
0E
#25000000
1!
1)
18
1E
1s
#30000000
0!
0)
08
0E
#35000000
1!
1)
18
1E
0s
#40000000
0!
0)
08
0E
#45000000
1!
1)
18
1E
1s
#50000000
0!
0%
b0001 (
0)
b0001 *
0+
08
0E
#55000000
1!
b0001 "
b111 $
1)
b0001 .
b111 0
b0001 3
b111 6
18
1E
0s
#60000000
0!
1%
0)
1+
08
0E
#65000000
1!
b000 $
1)
b000 0
b000 6
18
1E
1s
#70000000
0!
0&
0)
0,
08
0E
#75000000
1!
b001 $
1)
b001 0
b0001 1
14
b001 6
18
b0001 9
1:
1=
b0001 A
1E
0s
#80000000
0!
1&
0)
1,
08
0E
#85000000
1!
b0001 #
b111 $
1)
b0001 /
b111 0
04
b0001 5
b111 6
b0001 7
18
0:
0=
b0001 C
1E
b0001 T
b0001 W
b0001 X
b0001 b
1o
1s
1y
#90000000
0!
0)
08
0E
#95000000
1!
b000 $
1)
b000 0
b0001 2
b000 6
18
b0001 ;
b0001 <
1E
b0001 Q
b0001 V
b0000 W
b0000 X
b0000 b
b0001 m
0o
0s
0y
#100000000
0!
0%
b0010 (
0)
b0010 *
0+
08
0E
#105000000
1!
b0010 "
b111 $
1)
b0010 .
b111 0
b0000 2
b0010 3
b111 6
18
b0000 ;
b0000 <
1E
b0000 Q
b0000 V
1s
#110000000
0!
1%
0)
1+
08
0E
#115000000
1!
b000 $
1)
b000 0
b000 6
18
1E
0s
#120000000
0!
0&
0)
0,
08
0E
#125000000
1!
b001 $
1)
b001 0
b0010 1
14
b001 6
18
b0010 9
1:
1=
b0010 A
1E
1s
#130000000
0!
1&
0)
1,
08
0E
#135000000
1!
b0010 #
b111 $
1)
b0010 /
b111 0
04
b0010 5
b111 6
b0010 7
18
0:
0=
b0010 C
1E
b0010 T
b0010 W
b0010 X
b0010 b
1o
0s
1y
#140000000
0!
0)
08
0E
#145000000
1!
b000 $
1)
b000 0
b0010 2
b000 6
18
b0010 ;
b0010 <
1E
b0010 Q
b0010 V
b0000 W
b0000 X
b0000 b
b0010 m
0o
1s
0y
#150000000
0!
0%
b0011 (
0)
b0011 *
0+
08
0E
#155000000
1!
b0011 "
b111 $
1)
b0011 .
b111 0
b0000 2
b0011 3
b111 6
18
b0000 ;
b0000 <
1E
b0000 Q
b0000 V
0s
#160000000
0!
1%
0)
1+
08
0E
#165000000
1!
b000 $
1)
b000 0
b000 6
18
1E
1s
#170000000
0!
0&
0)
0,
08
0E
#175000000
1!
b001 $
1)
b001 0
b0011 1
14
b001 6
18
b0011 9
1:
1=
b0011 A
1E
0s
#180000000
0!
1&
0)
1,
08
0E
#185000000
1!
b0011 #
b111 $
1)
b0011 /
b111 0
04
b0011 5
b111 6
b0011 7
18
0:
0=
b0011 C
1E
b0011 T
b0011 W
b0011 X
b0011 b
1o
1s
1y
#190000000
0!
b0000 (
0)
b0000 *
08
0E
#195000000
1!
b000 $
1)
b000 0
b0011 2
b000 6
18
b0011 ;
b0011 <
1E
b0011 Q
b0011 V
b0000 W
b0000 X
b0000 b
b0011 m
0o
0s
0y
#200000000
0!
0%
0)
0+
08
0E
#205000000
1!
b0000 "
b111 $
1)
b0000 .
b111 0
b0000 2
b0000 3
b111 6
18
b0000 ;
b0000 <
1E
b0000 Q
b0000 V
1s
#210000000
0!
1%
0)
1+
08
0E
#215000000
1!
b000 $
1)
b000 0
b000 6
18
1E
0s
#220000000
0!
0'
0)
0-
08
0E
#225000000
1!
b0010 #
b100 $
1)
b0010 /
b100 0
b0010 5
b100 6
b0010 7
18
b0010 C
1E
1s
#230000000
0!
1'
0)
1-
08
0E
#235000000
1!
b101 $
1)
b101 0
b101 6
18
1E
b0011 W
b0011 X
b0010 m
0s
#240000000
0!
0)
08
0E
#245000000
1!
b110 $
1)
b110 0
b0011 2
b110 6
18
b0011 ;
b0011 <
1E
b0011 Q
b0011 V
1s
#250000000
0!
0)
08
0E
#255000000
1!
b0011 "
b111 $
1)
b0011 .
b111 0
b0011 3
b111 6
18
1E
0s
#260000000
0!
0)
08
0E
#265000000
1!
b000 $
1)
b000 0
b000 6
18
1E
1s
#270000000
0!
0)
08
0E
#275000000
1!
1)
18
1E
0s
#280000000
0!
0'
0)
0-
08
0E
#285000000
1!
b0001 #
b100 $
1)
b0001 /
b100 0
b0001 5
b100 6
b0001 7
18
b0001 C
1E
1s
#290000000
0!
1'
0)
1-
08
0E
#295000000
1!
b101 $
1)
b101 0
b101 6
18
1E
b0010 W
b0010 X
b0001 m
0s
#300000000
0!
0)
08
0E
#305000000
1!
b110 $
1)
b110 0
b0010 2
b110 6
18
b0010 ;
b0010 <
1E
b0010 Q
b0010 V
1s
#310000000
0!
0)
08
0E
#315000000
1!
b0010 "
b111 $
1)
b0010 .
b111 0
b0010 3
b111 6
18
1E
0s
#320000000
0!
0)
08
0E
#325000000
1!
b000 $
1)
b000 0
b000 6
18
1E
1s
#330000000
0!
0)
08
0E
#335000000
1!
1)
18
1E
0s
#340000000
0!
0'
0)
0-
08
0E
#345000000
1!
b0000 #
b100 $
1)
b0000 /
b100 0
b0000 5
b100 6
b0000 7
18
b0000 C
1E
1s
#350000000
0!
1'
0)
1-
08
0E
#355000000
1!
b101 $
1)
b101 0
b101 6
18
1E
b0001 W
b0001 X
b0000 m
0s
#360000000
0!
0)
08
0E
#365000000
1!
b110 $
1)
b110 0
b0001 2
b110 6
18
b0001 ;
b0001 <
1E
b0001 Q
b0001 V
1s
#370000000
0!
0)
08
0E
#375000000
1!
b0001 "
b111 $
1)
b0001 .
b111 0
b0001 3
b111 6
18
1E
0s
#380000000
0!
0)
08
0E
#385000000
1!
b000 $
1)
b000 0
b000 6
18
1E
1s
#390000000
0!
0)
08
0E
#395000000
1!
1)
18
1E
0s
#400000000
0!
0)
08
0E
#405000000
1!
1)
18
1E
1s
#410000000
0!
0)
08
0E
#415000000
1!
1)
18
1E
0s
#420000000
0!
0)
08
0E
#425000000
1!
1)
18
1E
1s
#430000000
0!
0)
08
0E
#435000000
1!
1)
18
1E
0s
#440000000
0!
0)
08
0E
#445000000
1!
1)
18
1E
1s
#450000000
